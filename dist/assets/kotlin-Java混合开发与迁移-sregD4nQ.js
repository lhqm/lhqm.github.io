import{_ as E}from"./ValaxyMain.vue_vue_type_style_index_0_lang-BywQH4su.js";import{_ as y,a as i,p as d,o as u,c as F,w as o,f as l,g as s,h as a,r as t,i as h}from"./index-E387Nd6j.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-IdOfAldt.js";import"./YunCard.vue_vue_type_script_setup_true_lang-eW1YvDXK.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-LTujyILk.js";import"./index-nlSmcLJj.js";const c=JSON.parse('{"title":"Java迁移J&K混合开发","description":"","frontmatter":{"title":"Java迁移J&K混合开发","date":"2023-11-02T00:00:00.000Z","updated":"2023-11-02T00:00:00.000Z","categories":"笔记","codeHeightLimit":50,"tags":["Java","Kotlin"]},"headers":[{"level":2,"title":"迁移规范","slug":"迁移规范","link":"#迁移规范","children":[{"level":3,"title":"通俗约定","slug":"通俗约定","link":"#通俗约定","children":[]},{"level":3,"title":"Maven编译模式","slug":"maven编译模式","link":"#maven编译模式","children":[]},{"level":3,"title":"Maven坐标与混合编译支持","slug":"maven坐标与混合编译支持","link":"#maven坐标与混合编译支持","children":[]},{"level":3,"title":"Maven插件与spring支持","slug":"maven插件与spring支持","link":"#maven插件与spring支持","children":[]},{"level":3,"title":"依赖版本","slug":"依赖版本","link":"#依赖版本","children":[]}]},{"level":2,"title":"开发规范QA合集（持续完善）","slug":"开发规范qa合集-持续完善","link":"#开发规范qa合集-持续完善","children":[{"level":3,"title":"Java快速上手kotlin","slug":"java快速上手kotlin","link":"#java快速上手kotlin","children":[]},{"level":3,"title":"类/方法规范","slug":"类-方法规范","link":"#类-方法规范","children":[]},{"level":3,"title":"协程使用规范","slug":"协程使用规范","link":"#协程使用规范","children":[]}]},{"level":2,"title":"目前已有的迁移封装","slug":"目前已有的迁移封装","link":"#目前已有的迁移封装","children":[{"level":3,"title":"多协程执行IO（网络服务请求）任务","slug":"多协程执行io-网络服务请求-任务","link":"#多协程执行io-网络服务请求-任务","children":[]}]}],"relativePath":"pages/posts/jk/kotlin-Java混合开发与迁移.md","path":"D:/vuepress2/valaxy/fox-document-server/pages/posts/jk/kotlin-Java混合开发与迁移.md","lastUpdated":1706088786000}'),A={name:"pages/posts/jk/kotlin-Java混合开发与迁移.md",data(){return{data:c,frontmatter:c.frontmatter,$frontmatter:c.frontmatter}},setup(){const e=i();e.meta.frontmatter=Object.assign(e.meta.frontmatter||{},c.frontmatter||{}),d("pageData",c)}},D={id:"java-kotlin混编与api迁移规范文档",tabindex:"-1"},v={class:"table-of-contents"},m={id:"迁移规范",tabindex:"-1"},g={id:"通俗约定",tabindex:"-1"},k=l("p",null,[s("目标迁移语言："),l("code",null,"kotlin")],-1),C=l("p",null,[s("目标迁移API范围："),l("code",null,"Java线程池"),s("、"),l("code",null,"大数据集操作")],-1),_={id:"maven编译模式",tabindex:"-1"},f=l("div",{style:{"max-height":"50px"},class:"language-xml"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"xml"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#85E89D"}},"properties"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 设置java版本 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        <"),l("span",{style:{color:"#85E89D"}},"java.version"),l("span",{style:{color:"#E1E4E8"}},">1.8</"),l("span",{style:{color:"#85E89D"}},"java.version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        <"),l("span",{style:{color:"#85E89D"}},"project.build.sourceEncoding"),l("span",{style:{color:"#E1E4E8"}},">UTF-8</"),l("span",{style:{color:"#85E89D"}},"project.build.sourceEncoding"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        <"),l("span",{style:{color:"#85E89D"}},"project.reporting.outputEncoding"),l("span",{style:{color:"#E1E4E8"}},">UTF-8</"),l("span",{style:{color:"#85E89D"}},"project.reporting.outputEncoding"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 设置kotlin版本 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        <"),l("span",{style:{color:"#85E89D"}},"kotlin.version"),l("span",{style:{color:"#E1E4E8"}},">1.6.0</"),l("span",{style:{color:"#85E89D"}},"kotlin.version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 启用kotlin增量编译 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        <"),l("span",{style:{color:"#85E89D"}},"kotlin.compiler.incremental"),l("span",{style:{color:"#E1E4E8"}},">true</"),l("span",{style:{color:"#85E89D"}},"kotlin.compiler.incremental"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"</"),l("span",{style:{color:"#85E89D"}},"properties"),l("span",{style:{color:"#E1E4E8"}},">")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#22863A"}},"properties"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 设置java版本 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        <"),l("span",{style:{color:"#22863A"}},"java.version"),l("span",{style:{color:"#24292E"}},">1.8</"),l("span",{style:{color:"#22863A"}},"java.version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        <"),l("span",{style:{color:"#22863A"}},"project.build.sourceEncoding"),l("span",{style:{color:"#24292E"}},">UTF-8</"),l("span",{style:{color:"#22863A"}},"project.build.sourceEncoding"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        <"),l("span",{style:{color:"#22863A"}},"project.reporting.outputEncoding"),l("span",{style:{color:"#24292E"}},">UTF-8</"),l("span",{style:{color:"#22863A"}},"project.reporting.outputEncoding"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 设置kotlin版本 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        <"),l("span",{style:{color:"#22863A"}},"kotlin.version"),l("span",{style:{color:"#24292E"}},">1.6.0</"),l("span",{style:{color:"#22863A"}},"kotlin.version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"<!-- 启用kotlin增量编译 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        <"),l("span",{style:{color:"#22863A"}},"kotlin.compiler.incremental"),l("span",{style:{color:"#24292E"}},">true</"),l("span",{style:{color:"#22863A"}},"kotlin.compiler.incremental"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"</"),l("span",{style:{color:"#22863A"}},"properties"),l("span",{style:{color:"#24292E"}},">")])])]),l("button",{class:"collapse"})],-1),b={id:"maven坐标与混合编译支持",tabindex:"-1"},B=l("div",{style:{"max-height":"50px"},class:"language-xml"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"xml"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}}," 			"),l("span",{style:{color:"#6A737D"}},"<!-- kotlin反射基础库 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlin-reflect</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">${kotlin.version}</"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin基础标准语法库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlin-stdlib-jdk8</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">${kotlin.version}</"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin协程Jdk标准库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlinx</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlinx-coroutines-jdk8</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin协程核心库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlinx</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlinx-coroutines-core</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin、Java混合编译依赖-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">com.fasterxml.jackson.module</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">jackson-module-kotlin</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292E"}}," 			"),l("span",{style:{color:"#6A737D"}},"<!-- kotlin反射基础库 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlin-reflect</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">${kotlin.version}</"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin基础标准语法库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlin-stdlib-jdk8</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">${kotlin.version}</"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin协程Jdk标准库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlinx</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlinx-coroutines-jdk8</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin协程核心库-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlinx</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlinx-coroutines-core</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#6A737D"}},"<!--kotlin、Java混合编译依赖-->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">com.fasterxml.jackson.module</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">jackson-module-kotlin</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")])])]),l("button",{class:"collapse"})],-1),I={id:"maven插件与spring支持",tabindex:"-1"},x=l("div",{style:{"max-height":"50px"},class:"language-xml"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"xml"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"		<"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlin-maven-plugin</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">${kotlin.version}</"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"configuration"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"jvmTarget"),l("span",{style:{color:"#E1E4E8"}},">1.8</"),l("span",{style:{color:"#85E89D"}},"jvmTarget"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"args"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"arg"),l("span",{style:{color:"#E1E4E8"}},">-Xjsr305=strict</"),l("span",{style:{color:"#85E89D"}},"arg"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    </"),l("span",{style:{color:"#85E89D"}},"args"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"compilerPlugins"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- Spring使用动态代理需要所有Bean可继承，该插件为所有Bean添加open关键字 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">spring</"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- 该插件为jpa实体类解决没有无参构造器的问题 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- <plugin>jpa</plugin> -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">no-arg</"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    </"),l("span",{style:{color:"#85E89D"}},"compilerPlugins"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"pluginOptions"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#6A737D"}},"<!-- 有些持久层框架需要实体类需要无参构造器，使用该注解标注解决kotlin data class没有无参构造器的问题 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"option"),l("span",{style:{color:"#E1E4E8"}},">no-arg:annotation=com.example.annotations.NoArg</"),l("span",{style:{color:"#85E89D"}},"option"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    </"),l("span",{style:{color:"#85E89D"}},"pluginOptions"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                </"),l("span",{style:{color:"#85E89D"}},"configuration"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                <"),l("span",{style:{color:"#85E89D"}},"dependencies"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlin-maven-allopen</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">${kotlin.version}</"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    <"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#85E89D"}},"groupId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">kotlin-maven-noarg</"),l("span",{style:{color:"#85E89D"}},"artifactId"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                        <"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">${kotlin.version}</"),l("span",{style:{color:"#85E89D"}},"version"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    </"),l("span",{style:{color:"#85E89D"}},"dependency"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                </"),l("span",{style:{color:"#85E89D"}},"dependencies"),l("span",{style:{color:"#E1E4E8"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            </"),l("span",{style:{color:"#85E89D"}},"plugin"),l("span",{style:{color:"#E1E4E8"}},">")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"		<"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlin-maven-plugin</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">${kotlin.version}</"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"configuration"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"jvmTarget"),l("span",{style:{color:"#24292E"}},">1.8</"),l("span",{style:{color:"#22863A"}},"jvmTarget"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"args"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"arg"),l("span",{style:{color:"#24292E"}},">-Xjsr305=strict</"),l("span",{style:{color:"#22863A"}},"arg"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    </"),l("span",{style:{color:"#22863A"}},"args"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"compilerPlugins"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- Spring使用动态代理需要所有Bean可继承，该插件为所有Bean添加open关键字 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">spring</"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- 该插件为jpa实体类解决没有无参构造器的问题 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        "),l("span",{style:{color:"#6A737D"}},"<!-- <plugin>jpa</plugin> -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">no-arg</"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    </"),l("span",{style:{color:"#22863A"}},"compilerPlugins"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"pluginOptions"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6A737D"}},"<!-- 有些持久层框架需要实体类需要无参构造器，使用该注解标注解决kotlin data class没有无参构造器的问题 -->")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"option"),l("span",{style:{color:"#24292E"}},">no-arg:annotation=com.example.annotations.NoArg</"),l("span",{style:{color:"#22863A"}},"option"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    </"),l("span",{style:{color:"#22863A"}},"pluginOptions"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                </"),l("span",{style:{color:"#22863A"}},"configuration"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                <"),l("span",{style:{color:"#22863A"}},"dependencies"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlin-maven-allopen</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">${kotlin.version}</"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    <"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">org.jetbrains.kotlin</"),l("span",{style:{color:"#22863A"}},"groupId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">kotlin-maven-noarg</"),l("span",{style:{color:"#22863A"}},"artifactId"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                        <"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">${kotlin.version}</"),l("span",{style:{color:"#22863A"}},"version"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    </"),l("span",{style:{color:"#22863A"}},"dependency"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                </"),l("span",{style:{color:"#22863A"}},"dependencies"),l("span",{style:{color:"#24292E"}},">")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            </"),l("span",{style:{color:"#22863A"}},"plugin"),l("span",{style:{color:"#24292E"}},">")])])]),l("button",{class:"collapse"})],-1),J={id:"依赖版本",tabindex:"-1"},j=l("blockquote",null,[l("p",null,[s("需要注意，"),l("code",null,"springboot"),s("默认定义了kotlin的版本，可以通过<kotlin.version></kotlin.version>来改变。")])],-1),M=l("p",null,[l("code",null," kotlin 1.6.0")],-1),S={id:"开发规范qa合集-持续完善",tabindex:"-1"},L={id:"java快速上手kotlin",tabindex:"-1"},K={id:"基础变量对照",tabindex:"-1"},P=l("p",null,"在Kotlin中，变量类型包括可为空和非空类型。与Java中的变量类型有一定的对应关系，但也有一些细微的差异",-1),z=l("ol",null,[l("li",null,"非空类型：")],-1),O=l("ul",null,[l("li",null,[l("code",null,"Int"),s("：对应Java的"),l("code",null,"int")]),l("li",null,[l("code",null,"Long"),s("：对应Java的"),l("code",null,"long")]),l("li",null,[l("code",null,"Float"),s("：对应Java的"),l("code",null,"float")]),l("li",null,[l("code",null,"Double"),s("：对应Java的"),l("code",null,"double")]),l("li",null,[l("code",null,"Boolean"),s("：对应Java的"),l("code",null,"boolean")]),l("li",null,[l("code",null,"Char"),s("：对应Java的"),l("code",null,"char")]),l("li",null,[l("code",null,"String"),s("：对应Java的"),l("code",null,"String")]),l("li",null,[l("code",null,"Byte"),s("：对应Java的"),l("code",null,"byte")]),l("li",null,[l("code",null,"Short"),s("：对应Java的"),l("code",null,"short")])],-1),w=l("ol",null,[l("li",null,[s("可为空类型（添加了 "),l("code",null,"?"),s("）：")])],-1),$=l("ul",null,[l("li",null,[l("code",null,"Int?"),s("：对应Java的"),l("code",null,"Integer")]),l("li",null,[l("code",null,"Long?"),s("：对应Java的"),l("code",null,"Long")]),l("li",null,[l("code",null,"Float?"),s("：对应Java的"),l("code",null,"Float")]),l("li",null,[l("code",null,"Double?"),s("：对应Java的"),l("code",null,"Double")]),l("li",null,[l("code",null,"Boolean?"),s("：对应Java的"),l("code",null,"Boolean")]),l("li",null,[l("code",null,"Char?"),s("：对应Java的"),l("code",null,"Character")]),l("li",null,[l("code",null,"String?"),s("：对应Java的"),l("code",null,"String")]),l("li",null,[l("code",null,"Byte?"),s("：对应Java的"),l("code",null,"Byte")]),l("li",null,[l("code",null,"Short?"),s("：对应Java的"),l("code",null,"Short")])],-1),T=l("p",null,[s("此外，Kotlin引入了可为空类型的概念，这是因为Kotlin在静态类型系统中加入了对 null 安全的支持，以避免 "),l("code",null,"NullPointerException"),s("的发生。可为空类型在类型声明后面添加了一个问号 "),l("code",null,"?"),s("，表示该变量可以接受 null 值。")],-1),U=l("p",null,[s("Kotlin还引入了许多其他的变量类型，如集合类型（"),l("code",null,"List"),s("、"),l("code",null,"Set"),s("、"),l("code",null,"Map"),s("等）、数据类型（"),l("code",null,"data class"),s("）、枚举类型（"),l("code",null,"enum class"),s("）等。这些类型在Java中没有直接的对应关系(我的理解是因为java只提供了泛型接口，下层的实现与之无关)。")],-1),H={id:"变量声明",tabindex:"-1"},q=l("p",null,"kotlin中变量声明格式为",-1),N=l("p",null,[l("code",null,"val value:[type]"),s("（不可变，类似java使用了final修饰符）或者"),l("code",null,"var value:[type]"),s("（类似Java中Object value;）")],-1),R=l("p",null,"以下是主要的区别：",-1),V=l("ol",null,[l("li",null,[l("p",null,"类型推断："),l("ul",null,[l("li",null,[s("Kotlin：Kotlin具有类型推断的功能，可以根据变量的初始值自动推断出其类型，而无需显式指定类型。例如："),l("code",null,'val name = "John"'),s("。")]),l("li",null,[s("Java：Java中变量的类型必须显式指定，例如："),l("code",null,'String name = "John";'),s("。")])])]),l("li",null,[l("p",null,"可变性："),l("ul",null,[l("li",null,[s("Kotlin：Kotlin的变量默认是不可变的，使用关键字 "),l("code",null,"val"),s(" 声明。如果需要可变的变量，需要使用关键字 "),l("code",null,"var"),s(" 声明。例如："),l("code",null,"val age = 25"),s("，"),l("code",null,"var count = 0"),s("。")]),l("li",null,[s("Java：Java的变量可通过使用关键字 "),l("code",null,"final"),s(" 来声明为不可变，使用关键字 "),l("code",null,"var"),s(" 声明为可变。例如："),l("code",null,"final int age = 25;"),s("，"),l("code",null,"int count = 0;"),s("。")])])]),l("li",null,[l("p",null,"默认值："),l("ul",null,[l("li",null,[s("Kotlin：在Kotlin中，如果一个变量使用 "),l("code",null,"var"),s(" 声明，并且没有被初始化，那么它会被自动赋予一个默认值。例如，"),l("code",null,"var x: Int"),s(" 的默认值是0，"),l("code",null,"var y: String?"),s(" 的默认值是"),l("code",null,"null"),s("。")]),l("li",null,"Java：在Java中，如果一个变量没有被初始化，它没有一个明确的默认值，而是需要手动初始化变量。")])]),l("li",null,[l("p",null,"null 安全："),l("ul",null,[l("li",null,[s("Kotlin：Kotlin在类型系统中引入了对 null 安全的支持。在Kotlin中，默认情况下，变量是不可为 null 的，即非空类型。如果允许变量为 null，则需要使用可为空类型，使用 "),l("code",null,"?"),s(" 后缀进行标记。例如："),l("code",null,"val name: String? = null"),s("。")]),l("li",null,[s("Java：在Java中，变量默认是可为 null 的，即可以接受 null 值。如果不希望接受 null 值，可以使用注解 "),l("code",null,"@NonNull"),s(" 或 "),l("code",null,"@NotNull"),s(" 进行标记。")])])]),l("li",null,[l("p",null,"引入包："),l("ul",null,[l("li",null,[s("Kotlin：Kotlin可以自动识别并导入需要的包，无需显式导入。例如，可以直接使用 "),l("code",null,"java.util.List"),s("，而无需显式导入该包。")]),l("li",null,[s("Java：Java需要显式导入使用的包，例如 "),l("code",null,"import java.util.List;"),s("。")])])])],-1),W={id:"遍历方法",tabindex:"-1"},Q=l("ol",null,[l("li",null,[l("p",null,"for 循环："),l("ul",null,[l("li",null,[l("p",null,[s("Kotlin：在Kotlin中，for 循环被称为“区间遍历”，可以使用 "),l("code",null,".."),s(" 运算符来定义一个区间。例如："),l("code",null,"for (i in 1..5)")])]),l("li",null,[l("p",null,[s("Java：在Java中，for 循环主要使用条件判断和递增操作，例如："),l("code",null,"for (int i = 1; i <= 5; i++)")]),l("p",null,[s("如果要在kotlin中进行下表遍历，需要借助"),l("code",null,"indices"),s(":")]),l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," str "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#9ECBFF"}},'"Hello"')]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"for"),l("span",{style:{color:"#E1E4E8"}}," (index "),l("span",{style:{color:"#F97583"}},"in"),l("span",{style:{color:"#E1E4E8"}}," str.indices) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," char "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," str[index]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"Character at index '),l("span",{style:{color:"#79B8FF"}},"$index"),l("span",{style:{color:"#9ECBFF"}}," is "),l("span",{style:{color:"#79B8FF"}},"$char"),l("span",{style:{color:"#9ECBFF"}},'"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," str "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#032F62"}},'"Hello"')]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"for"),l("span",{style:{color:"#24292E"}}," (index "),l("span",{style:{color:"#D73A49"}},"in"),l("span",{style:{color:"#24292E"}}," str.indices) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," char "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," str[index]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"Character at index '),l("span",{style:{color:"#005CC5"}},"$index"),l("span",{style:{color:"#032F62"}}," is "),l("span",{style:{color:"#005CC5"}},"$char"),l("span",{style:{color:"#032F62"}},'"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})])])])]),l("li",null,[l("p",null,"遍历集合："),l("ul",null,[l("li",null,[s("Kotlin：在Kotlin中，遍历集合可以使用 "),l("code",null,"for...in"),s(" 循环结构。例如："),l("code",null,"for (item in list)")]),l("li",null,[s("Java：在Java中，遍历集合可以使用增强型的 for 循环或迭代器。例如："),l("code",null,"for (String item : list)"),s(" 或使用 "),l("code",null,"Iterator"),s(" 进行遍历。")])])]),l("li",null,[l("p",null,"while 和 do…while 循环："),l("ul",null,[l("li",null,[s("Kotlin：Kotlin中的 while 和 do…while 循环与Java类似，使用关键字 "),l("code",null,"while"),s(" 和 "),l("code",null,"do...while"),s(" 进行定义。")]),l("li",null,[s("Java：Java中的 while 和 do…while 循环的用法与Kotlin类似，使用关键字 "),l("code",null,"while"),s(" 和 "),l("code",null,"do...while"),s(" 进行定义。")])])])],-1),X={id:"方法声明",tabindex:"-1"},Z=l("ol",null,[l("li",null,[s("方法声明和参数列表： "),l("ul",null,[l("li",null,[s("Kotlin：Kotlin中方法的声明与Java类似，但有一些差异。在Kotlin中，方法声明使用关键字 "),l("code",null,"fun"),s("，参数列表的声明方式也略有不同。参数的声明方式是“参数名: 参数类型”，参数之间使用逗号分隔。例如："),l("code",null,"fun add(a: Int, b: Int)")]),l("li",null,[s("Java：在Java中，方法的声明方式使用关键字 "),l("code",null,"public"),s(" 或其他访问修饰符，后跟返回值类型和方法名，参数列表用括号括起来。例如："),l("code",null,"public int add(int a, int b)")])])]),l("li",null,[s("返回值类型： "),l("ul",null,[l("li",null,[s("Kotlin：在Kotlin中，方法的返回值类型位于方法名之后，使用冒号 "),l("code",null,":"),s(" 进行标记。例如："),l("code",null,"fun add(a: Int, b: Int): Int")]),l("li",null,[s("Java：在Java中，方法的返回值类型位于方法名之前，使用关键字表示。例如："),l("code",null,"public int add(int a, int b)")])])])],-1),G=l("p",null,"需要注意的是，Kotlin与Java之间在方法声明和返回值定义方面的差异不会影响两种语言之间的互操作。",-1),Y=l("p",null,"此外，Kotlin引入了一些其他的特性，如默认参数。在Kotlin中，可以为方法参数提供默认值，这样在调用方法时，如果不提供对应的参数值，将使用默认值。例如：",-1),ll=l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"greet"),l("span",{style:{color:"#E1E4E8"}},"(name: "),l("span",{style:{color:"#B392F0"}},"String"),l("span",{style:{color:"#E1E4E8"}},", message: "),l("span",{style:{color:"#B392F0"}},"String"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#9ECBFF"}},'"Hello"'),l("span",{style:{color:"#E1E4E8"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"'),l("span",{style:{color:"#79B8FF"}},"$message"),l("span",{style:{color:"#9ECBFF"}},", "),l("span",{style:{color:"#79B8FF"}},"$name"),l("span",{style:{color:"#9ECBFF"}},'!"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"// 调用方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#B392F0"}},"greet"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"John"'),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#6A737D"}},"// 输出: Hello, John!")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#B392F0"}},"greet"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"Alice"'),l("span",{style:{color:"#E1E4E8"}},", "),l("span",{style:{color:"#9ECBFF"}},'"Hi"'),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#6A737D"}},"// 输出: Hi, Alice!")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"greet"),l("span",{style:{color:"#24292E"}},"(name: "),l("span",{style:{color:"#6F42C1"}},"String"),l("span",{style:{color:"#24292E"}},", message: "),l("span",{style:{color:"#6F42C1"}},"String"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#032F62"}},'"Hello"'),l("span",{style:{color:"#24292E"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"'),l("span",{style:{color:"#005CC5"}},"$message"),l("span",{style:{color:"#032F62"}},", "),l("span",{style:{color:"#005CC5"}},"$name"),l("span",{style:{color:"#032F62"}},'!"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"// 调用方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6F42C1"}},"greet"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"John"'),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#6A737D"}},"// 输出: Hello, John!")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6F42C1"}},"greet"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"Alice"'),l("span",{style:{color:"#24292E"}},", "),l("span",{style:{color:"#032F62"}},'"Hi"'),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#6A737D"}},"// 输出: Hi, Alice!")])])]),l("button",{class:"collapse"})],-1),sl=l("p",null,[s("在上述示例中，"),l("code",null,"greet()"),s(" 方法的 "),l("code",null,"message"),s(" 参数具有默认值 "),l("code",null,'"Hello"'),s("。如果调用该方法时只提供了 "),l("code",null,"name"),s(" 参数，那么 "),l("code",null,"message"),s(" 参数将使用默认值。")],-1),ol={id:"函数式api",tabindex:"-1"},nl=l("ol",null,[l("li",null,"函数作为一等公民：Kotlin 将函数视为一等公民，就像其他的值一样。这意味着我们可以将函数分配给变量、作为参数传递给其他函数，以及从函数中返回函数。Java 8 之前的版本中并没有这些能力，而 Java 8 引入了 lambda 表达式作为函数式编程的一部分。（这部分需要自己理解一下）"),l("li",null,[s("简洁性和可读性：Kotlin 通过提供简洁的语法和功能来提高函数式编程的可读性和编写效率。Kotlin 中的函数可以使用表达式体语法定义，并且具有更少的样板代码。此外，Kotlin 提供了一些内置的函数和扩展函数，如 "),l("code",null,"map"),s("、"),l("code",null,"filter"),s("、"),l("code",null,"reduce"),s(" 等，简化了集合操作（类似Java中的"),l("code",null,"Stream"),s("操作）。")]),l("li",null,[s("可空类型处理：Kotlin 的类型系统对可空性进行了更严格的处理。Kotlin 中的函数可以明确指定参数是否可为空，并且在函数签名中使用 "),l("code",null,"?"),s(" 标记可空类型。这可以提供更好的可靠性，并减少空指针异常的发生。")]),l("li",null,"异常处理：Kotlin 中的函数式编程更加倾向于使用表达式式的异常处理方式。Kotlin 的异常被归类为受检异常和非受检异常，非受检异常在函数签名中不需要显式声明。这与 Java 中的受检异常和非受检异常的处理方式有所不同。"),l("li",null,"集合处理：Kotlin 提供了一个功能丰富的标准库，尤其是在集合操作方面。Kotlin 的集合操作函数旨在提供更直观和简洁的代码，并且经常使用函数参数和 Lambda 表达式进行自定义操作。")],-1),al=l("p",null,"Java 8 虽然引入了 lambda 表达式和流式 API，提供了一定程度的函数式编程支持。然而，Kotlin 在语言层面上对函数式编程进行了更深入的整合，提供了更多的语法糖和工具函数，使得函数式编程更加方便和强大。",-1),el={id:"class类声明",tabindex:"-1"},tl=l("p",null,[s("Kotlin中可以在代码文件中不使用"),l("code",null,"class"),s("。这是因为Kotlin引入了顶层函数和属性的概念，使得编写简单的、独立的功能代码变得更加方便。")],-1),cl=l("p",null,"在Java中，每个代码文件都必须包含一个类，并且类是代码的基本组织单位。而在Kotlin中，代码文件可以包含函数、属性、对象声明等顶层元素，而不一定需要一个类。这意味着Kotlin允许开发者在代码文件中直接编写函数和属性，而无需将它们放在类中。",-1),pl=l("p",null,"以下是一个对比示例：",-1),rl=l("p",null,"Java代码：",-1),El=l("div",{style:{"max-height":"50px"},class:"language-java"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"java"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"class"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"HelloWorld"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"static"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"void"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"main"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#F97583"}},"String"),l("span",{style:{color:"#E1E4E8"}},"[] "),l("span",{style:{color:"#FFAB70"}},"args"),l("span",{style:{color:"#E1E4E8"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        System.out."),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"Hello, World!"'),l("span",{style:{color:"#E1E4E8"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"class"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"HelloWorld"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"static"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"void"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"main"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#D73A49"}},"String"),l("span",{style:{color:"#24292E"}},"[] "),l("span",{style:{color:"#E36209"}},"args"),l("span",{style:{color:"#24292E"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        System.out."),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"Hello, World!"'),l("span",{style:{color:"#24292E"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),yl=l("p",null,"Kotlin代码：",-1),il=l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"main"),l("span",{style:{color:"#E1E4E8"}},"() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"Hello, World!"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"main"),l("span",{style:{color:"#24292E"}},"() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"Hello, World!"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),dl=l("p",null,[s("在Kotlin中，我们可以直接使用"),l("code",null,"fun"),s("关键字来定义一个顶层函数"),l("code",null,"main()"),s("，而不需要放在类中。这样的代码文件可以直接运行，输出与Java代码相同的结果。")],-1),ul=l("p",null,"通过允许在代码文件中直接编写函数、属性和其他顶层元素，Kotlin提供了更简洁、更灵活的编码方式。它消除了在某些情况下创建不必要的类的需要，并使得代码更加清晰易读。",-1),Fl={id:"open-class与class",tabindex:"-1"},hl=l("p",null,[s("在Kotlin中，"),l("code",null,"class"),s("关键字用于定义类，而"),l("code",null,"open class"),s("关键字用于定义可继承的类。以下是关于这两个概念的解释：")],-1),Al=l("p",null,[s("普通的类（普通的"),l("code",null,"class"),s("）： 普通的类是Kotlin中最基本的类形式，它使用"),l("code",null,"class"),s("关键字进行定义。普通类默认是不可继承的，即不能被其他类继承。这是因为在Kotlin中，默认情况下，类和它的成员（方法、属性）都是"),l("code",null,"final"),s("的，禁止被子类继承或覆盖。")],-1),Dl=l("div",{style:{"max-height":"300px"},class:"language-"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"}),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"class MyClass {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"    // ...")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"class MyClass {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"    // ...")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"}")])])]),l("button",{class:"collapse"})],-1),vl=l("p",null,[s("在上述示例中，"),l("code",null,"MyClass"),s("是普通的类，不能被其他类继承或覆盖其方法和属性。")],-1),ml=l("p",null,[s("可继承的类（"),l("code",null,"open class"),s("）： 为了允许其他类继承或覆盖方法和属性，我们可以使用"),l("code",null,"open"),s("关键字来修饰类的声明，创建一个可继承的类。通过将类声明为"),l("code",null,"open class"),s("，我们明确表明该类是可被继承的。")],-1),gl=l("div",{style:{"max-height":"300px"},class:"language-"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"}),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"open class MyOpenClass {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"    open fun someMethod() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},'        println("This method can be overridden.")')]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"open class MyOpenClass {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"    open fun someMethod() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},'        println("This method can be overridden.")')]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"}")])])]),l("button",{class:"collapse"})],-1),kl=l("p",null,[s("在上述示例中，"),l("code",null,"MyOpenClass"),s("是一个可继承的类。使用"),l("code",null,"open"),s("关键字修饰类声明和方法声明，表示它们可以被子类继承和覆盖。")],-1),Cl=l("p",null,[s("子类可以通过使用"),l("code",null,":"),s("符号来扩展可继承的类，并覆盖其中的方法。例如：")],-1),_l=l("div",{style:{"max-height":"300px"},class:"language-"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"}),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"class MySubClass : MyOpenClass() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"    override fun someMethod() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"        super.someMethod()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},'        println("This is a overridden method.")')]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#e1e4e8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"class MySubClass : MyOpenClass() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"    override fun someMethod() {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"        super.someMethod()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},'        println("This is a overridden method.")')]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292e"}},"}")])])]),l("button",{class:"collapse"})],-1),fl=l("p",null,[s("在上述示例中，"),l("code",null,"MySubClass"),s("是"),l("code",null,"MyOpenClass"),s("的子类，覆盖了其 "),l("code",null,"someMethod()"),s(" 方法。")],-1),bl=l("p",null,[s("需要注意的是，继承可继承的类使用了"),l("code",null,":"),s("符号，而不是Java中常见的"),l("code",null,"extends"),s("关键字。另外，子类覆盖父类方法时，需要使用"),l("code",null,"override"),s("关键字修饰方法声明。")],-1),Bl=l("blockquote",null,[l("p",null,[l("code",null,"open class"),s("是否可以等价于java的"),l("code",null,"public class")])],-1),Il=l("p",null,[s("并不，"),l("code",null,"public"),s("强调的是可访问性，而"),l("code",null,"open"),s("强调的是可继承性。")],-1),xl=l("p",null,[s("在Java中，"),l("code",null,"public class"),s("是指该类可以被其他包中的类访问。而在Kotlin中，"),l("code",null,"open class"),s("更多地关注类的继承性质，即该类是否可以被其他类继承。")],-1),Jl=l("p",null,[s("尽管在某些情况下，可以将"),l("code",null,"open class"),s("与Java中的"),l("code",null,"public class"),s("进行类比，但它们并不完全等价。")],-1),jl=l("p",null,[s("在Kotlin中，默认情况下，类是公有的（public），即可以被同一模块中的其他类访问。这一点与Java中的"),l("code",null,"public class"),s("类似。")],-1),Ml=l("p",null,[s("然而，在Kotlin中，类的访问修饰符是通过关键字"),l("code",null,"public"),s("、"),l("code",null,"internal"),s("、"),l("code",null,"protected"),s("和"),l("code",null,"private"),s("进行定义的，而不是像在Java中使用"),l("code",null,"public"),s("关键字。这些修饰符定义了类的可见性范围和访问级别：")],-1),Sl=l("ul",null,[l("li",null,[l("code",null,"public"),s("：类对所有其他类可见，类似于Java中的"),l("code",null,"public"),s("修饰符。")]),l("li",null,[l("code",null,"internal"),s("：类对同一模块中的其他类可见。（可以类比java的"),l("code",null,"default"),s("关键字）")]),l("li",null,[l("code",null,"protected"),s("：在Kotlin中，类本身不能被修饰为"),l("code",null,"protected"),s("，只能将其成员方法或属性声明为"),l("code",null,"protected"),s("。")]),l("li",null,[l("code",null,"private"),s("：类只对同一文件中的其他类可见。在Kotlin中，类不能被声明为"),l("code",null,"private"),s("。")])],-1),Ll=l("p",null,[s("而"),l("code",null,"open class"),s("则表示该类是可继承的，即可以被其他类继承和派生出子类。这与Java声明为"),l("code",null,"public"),s("的类是可以被其他类继承的概念相似，但并不完全一致。")],-1),Kl={id:"类-方法规范",tabindex:"-1"},Pl={id:"java友好的静态方法",tabindex:"-1"},zl=l("blockquote",null,[l("p",null,[s("如何在java中类似调用某个类的"),l("code",null,"静态方法"),s("一样调用kotlin方法")])],-1),Ol=l("p",null,[s("使用kotlin的"),l("code",null,"companion object {}"),s("内联方法块来实例化本类，配合"),l("code",null,"@JvmStatic标记"),s("以及"),l("code",null,"提供伴生对象方法"),s("给外部调用。")],-1),wl=l("p",null,[s("须知，kotlin并没有"),l("code",null,"static"),s("关键字，因此，Java程序要在不实例化的情况下调用kotlin代码，请使用伴生对象。（实际上还有"),l("code",null,"外部方法块"),s("，但是这样"),l("code",null,"不符合Java开发的惯例"),s("，为了符合Java开发规范，请使用伴生对象）")],-1),$l=l("p",null,"下方给出一组示例：",-1),Tl=l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"open"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"class"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"Demo"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"companion"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"object"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    	"),l("span",{style:{color:"#B392F0"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(num:"),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," instance"),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}},"Demo")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," instance."),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"suspend"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"():"),l("span",{style:{color:"#B392F0"}},"Void"),l("span",{style:{color:"#E1E4E8"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"suspend fun invoked as static method"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"open"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"class"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"Demo"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"companion"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"object"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    	"),l("span",{style:{color:"#6F42C1"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(num:"),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," instance"),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}},"Demo")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," instance."),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"suspend"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"():"),l("span",{style:{color:"#6F42C1"}},"Void"),l("span",{style:{color:"#24292E"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"suspend fun invoked as static method"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),Ul=l("p",null,[s("对此给出kotlin社区的"),l("strong",null,"一组解释"),s("：")],-1),Hl=l("div",{style:{"background-color":"#d6e8da"}},[l("p",null,[l("code",{style:{"background-color":"#d6e8da"}},"@JvmStatic"),s("是用于在Kotlin中标记静态方法的注解。在Kotlin中，没有直接的关键字来"),l("code",{style:{"background-color":"#d6e8da"}},"定义静态方法"),s("，因为Kotlin语言设计中"),l("code",{style:{"background-color":"#d6e8da"}},"鼓励使用包级函数和单例对象来代替静态方法"),s("。")]),l("p",null,[s("然而，在与Java代码互操作或使用某些框架时，有时需要将某些函数声明为静态方法。这时，可以使用"),l("code",{style:{"background-color":"#d6e8da"}},"@JvmStatic"),s("注解来标记函数，并告诉Kotlin编译器将其生成为"),l("code",{style:{"background-color":"#d6e8da"}},"与Java静态方法对应"),s("的代码。")]),l("p",null,"@JvmStatic注解的作用是："),l("blockquote",{style:{"background-color":"#d6e8da"}},[l("p",null,"告诉Kotlin编译器将带有@JvmStatic注解的函数生成为Java类的静态方法。这样，可以通过类名直接访问该方法，而无需创建类的实例。"),l("p",null,"在Kotlin代码中，使用@JvmStatic注解可以使其具有与Java相同的静态方法语义。这意味着，我们可以像在Java中一样直接调用标记为@JvmStatic的函数，而无需使用对象引用。")])],-1),ql={id:"挂起函数与标记挂起",tabindex:"-1"},Nl=l("p",null,[s("使用"),l("code",null,"suspend"),s("挂起标记来挂起一个函数，该函数称为"),l("code",null,"挂起函数")],-1),Rl=l("p",null,"准确来说，使用挂起函数方便在协程中直接进行轻量并发而不需阻塞主线程。",-1),Vl=l("p",null,[s("该标记的主要作用是"),l("code",null,"通知编译器该函数可能会挂起，并且需要特殊处理"),s("和"),l("code",null,"在调用该函数时能够适当地处理挂起操作，如协程框架中的挂起恢复机制")],-1),Wl=l("p",null,[l("u",null,"挂起函数"),s("的调用范围：")],-1),Ql=l("p",null,[s("只有在协程代码块（包括协程构建器如"),l("code",null,"launch"),s("、"),l("code",null,"async"),s("等）或其他挂起函数内部才能调用标记为"),l("code",null,"suspend"),s("的挂起函数。在普通的同步代码中，不能直接调用挂起函数。")],-1),Xl=l("p",null,[s("如下所示，展示一个"),l("code",null,"挂起函数"),s("和一个"),l("code",null,"调用挂起函数"),s("的例子")],-1),Zl=l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"kotlin.random.Random")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"kotlinx.coroutines.delay")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"kotlinx.coroutines.runBlocking")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"suspend"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"randomDelay"),l("span",{style:{color:"#E1E4E8"}},"(): "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"delay"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#79B8FF"}},"500"),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#6A737D"}},"// 挂起函数，休眠500毫秒")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," Random."),l("span",{style:{color:"#B392F0"}},"nextInt"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#79B8FF"}},"1"),l("span",{style:{color:"#E1E4E8"}},", "),l("span",{style:{color:"#79B8FF"}},"10"),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#6A737D"}},"// 返回随机的整数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"main"),l("span",{style:{color:"#E1E4E8"}},"() "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"runBlocking"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," result "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"randomDelay"),l("span",{style:{color:"#E1E4E8"}},"() "),l("span",{style:{color:"#6A737D"}},"// 调用挂起函数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"随机延迟后返回的随机整数为: '),l("span",{style:{color:"#79B8FF"}},"$result"),l("span",{style:{color:"#9ECBFF"}},'"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"kotlin.random.Random")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"kotlinx.coroutines.delay")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"kotlinx.coroutines.runBlocking")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"suspend"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"randomDelay"),l("span",{style:{color:"#24292E"}},"(): "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"delay"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#005CC5"}},"500"),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#6A737D"}},"// 挂起函数，休眠500毫秒")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," Random."),l("span",{style:{color:"#6F42C1"}},"nextInt"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#005CC5"}},"1"),l("span",{style:{color:"#24292E"}},", "),l("span",{style:{color:"#005CC5"}},"10"),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#6A737D"}},"// 返回随机的整数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"main"),l("span",{style:{color:"#24292E"}},"() "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"runBlocking"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," result "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"randomDelay"),l("span",{style:{color:"#24292E"}},"() "),l("span",{style:{color:"#6A737D"}},"// 调用挂起函数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"随机延迟后返回的随机整数为: '),l("span",{style:{color:"#005CC5"}},"$result"),l("span",{style:{color:"#032F62"}},'"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),Gl=l("p",null,[s("在上述示例中，我们定义了一个名为"),l("code",null,"randomDelay"),s("的挂起函数。它使用"),l("code",null,"delay(500)"),s("来模拟挂起状态并暂停执行500毫秒。随后，该函数使用"),l("code",null,"Random.nextInt(1, 10)"),s("生成一个1到9之间的随机整数，并将其作为结果返回。")],-1),Yl=l("p",null,[s("在"),l("code",null,"main"),s("函数中，我们借助"),l("code",null,"runBlocking"),s("协程构建器来创建一个顶层协程（Coroutine）。在协程内部，我们调用了"),l("code",null,"randomDelay"),s("挂起函数，并将其返回值存储在"),l("code",null,"result"),s("变量中。最后，我们使用"),l("code",null,"println"),s("函数打印出随机延迟后返回的随机整数。")],-1),ls=l("p",null,[s("在"),l("code",null,"main"),s("函数中，我们使用"),l("code",null,"runBlocking"),s("来创建一个顶层协程，以便能够在主线程中挂起函数。在实际的应用中，通常会使用协程构建器（如"),l("code",null,"launch"),s("、"),l("code",null,"async"),s("等）来调度和执行协程，具体定义见之后的文档。")],-1),ss={id:"协程使用规范",tabindex:"-1"},os={id:"协程调度器定义与分类",tabindex:"-1"},ns=l("p",null,"在 Kotlin 中，协程调度器（Coroutine Dispatcher）用于控制协程在哪个线程或线程池上执行。调度器负责协程的调度和线程切换。",-1),as=l("p",null,"Kotlin 协程提供了几种内置的调度器，常用的包括以下几种：",-1),es=l("ol",null,[l("li",null,[l("code",null,"Dispatchers.Default"),s("：默认调度器，会使用一个共享的线程池来执行协程。适合执行 CPU 密集型的任务。")]),l("li",null,[l("code",null,"Dispatchers.IO"),s("：针对 I/O 操作（如文件读写、网络请求等）优化的调度器，会使用一个专用的线程池来执行协程。适合执行需要长时间等待的 I/O 操作。")]),l("li",null,[l("code",null,"Dispatchers.Main"),s("：适用于 Android 平台的"),l("code",null,"UI调度器"),s("，用于在主线程上执行协程，主要用于 UI 相关的操作。这个调度器需要在 Android 应用中使用协程扩展库 "),l("code",null,"kotlinx.coroutines-android"),s(" 才能使用。"),l("code",null,"我们不会用到这个调度器，请忽略该选项")]),l("li",null,[l("code",null,"Dispatchers.Unconfined"),s("：不受限的调度器，会在当前线程中立即执行协程，但在挂起或恢复操作时，会恢复到调用协程的上下文中。适合一些不需要切换线程的场景。")])],-1),ts=l("p",null,[s("除了这些内置的调度器，Kotlin 协程还支持自定义调度器。可以使用 "),l("code",null,"CoroutineDispatcher"),s(" 接口创建自定义的调度器，以满足特定的调度任务来挂起执行协程。")],-1),cs={id:"异步构建",tabindex:"-1"},ps=l("p",null,[s("使用协程构建异步函数：使用 "),l("code",null,"suspend"),s(" 关键字来标记函数，使其成为协程函数。协程函数可以执行挂起操作，而无需显式地依赖回调或阻塞线程。")],-1),rs={id:"协程作用域",tabindex:"-1"},Es=l("p",null,[s("在 Spring Boot 中，可以使用 "),l("code",null,"CoroutineScope"),s(" 来创建协程的作用域，这个作用域可以指定协程的生命周期和执行环境。通常，可以使用 "),l("code",null,"GlobalScope"),s("、"),l("code",null,"viewModelScope"),s(" 或自定义的作用域来管理协程。")],-1),ys={id:"调度器",tabindex:"-1"},is=l("p",null,[s("使用 "),l("code",null,"withContext()"),s(" 函数切换协程的调度器。例如，在进行 I/O 操作时，可以使用 "),l("code",null,"Dispatchers.IO"),s(" 调度器来确保在单独的线程池中执行耗时的操作。")],-1),ds={id:"异常处理",tabindex:"-1"},us=l("p",null,[s("使用 "),l("code",null,"try-catch"),s(" 块或 "),l("code",null,"coroutineExceptionHandler"),s(" 来捕获和处理协程中的异常。在失败时，可以适当地处理异常并采取相应的补救措施。")],-1),Fs={id:"协程的取消和内存泄漏问题的规避",tabindex:"-1"},hs=l("p",null,[s("使用 "),l("code",null,"CoroutineScope"),s(" 提供的 "),l("code",null,"cancel()"),s(" 方法来取消协程的执行。在 Spring Boot 中，可以利用 Bean 的生命周期或请求处理等机制，在适当的时候取消协程的执行，避免潜在的资源泄漏。以及不使用"),l("code",null,"global"),s("挂起协程。")],-1),As={id:"目前已有的迁移封装",tabindex:"-1"},Ds={id:"多协程执行io-网络服务请求-任务",tabindex:"-1"},vs=l("blockquote",null,[l("p",null,[s("该方法允许一个Java方法通过发起反射调用方法的方式进行方法调用。其大致过程为"),l("code",null,"Java->kotlin->Java")])],-1),ms={id:"kotlin核心封装代码",tabindex:"-1"},gs=l("div",{style:{"max-height":"50px"},class:"language-kotlin"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"kotlin"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"kotlinx.coroutines."),l("span",{style:{color:"#79B8FF"}},"*")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"java.lang.RuntimeException")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"java.lang.reflect.Method")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * "),l("span",{style:{color:"#F97583"}},"@author"),l("span",{style:{color:"#6A737D"}}," He R'K")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * @date  2023/8/20 9:59")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * @version 1.0")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * kotlin协程作用类。用于使用协程挂起业务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"open"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"class"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"CoroutinesUtil"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 通过伴生对象来暴露外界可直接调用的接口")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 同时通过 @JvmStatic 实现一个类似static关键字的伴生对象扩展方法的静态标记")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 通过该注解的标记，让Java程序可以以调用静态方法的方式快速挂起协程，而省去创建对象的步骤")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"companion"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"object"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * 同步方法，阻塞主线程并执行该任务。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * 请注意，请勿在递归函数内随意调用，不然等待你的不一定是栈帧溢出，而可能先发生服务器卡顿甚至宕机。因为本方法将要调用异步代码块挂起数量庞大的协程。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"maxCoroutineLimit"),l("span",{style:{color:"#6A737D"}}," 最大协程数（默认100个）")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"params"),l("span",{style:{color:"#6A737D"}}," 需要被调用的方法的其他参数列表")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"loopIndex"),l("span",{style:{color:"#6A737D"}}," 被调用的迭代数据在目标方法的参数列表的位置。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"loopData"),l("span",{style:{color:"#6A737D"}}," 需要通过循环挂起协程的数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"method"),l("span",{style:{color:"#6A737D"}}," 被调用方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"clazz"),l("span",{style:{color:"#6A737D"}}," 被调用的对象字节码")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#F97583"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#FFAB70"}},"isStatic"),l("span",{style:{color:"#6A737D"}}," 方法是否为静态方法。静态方法可以少一次newInstance的开销。为了防止报错，默认开启")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#B392F0"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            maxCoroutineLimit: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopData: "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopIndex: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            method: "),l("span",{style:{color:"#B392F0"}},"Method"),l("span",{style:{color:"#E1E4E8"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            clazz: "),l("span",{style:{color:"#B392F0"}},"Class"),l("span",{style:{color:"#E1E4E8"}},"<*>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            isStatic: "),l("span",{style:{color:"#B392F0"}},"Boolean")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        ): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"runBlocking"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," instance "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"CoroutinesUtil"),l("span",{style:{color:"#E1E4E8"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                instance."),l("span",{style:{color:"#B392F0"}},"invokeJavaMethodSuspend"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    maxCoroutineLimit,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    params,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    loopData,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    loopIndex,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    method,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    clazz,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    isStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                )")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#B392F0"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            maxCoroutineLimit: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopData: "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopIndex: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            method: "),l("span",{style:{color:"#B392F0"}},"Method"),l("span",{style:{color:"#E1E4E8"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            clazz: "),l("span",{style:{color:"#B392F0"}},"Class"),l("span",{style:{color:"#E1E4E8"}},"<*>")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        ): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(maxCoroutineLimit, params, loopData, loopIndex, method, clazz, "),l("span",{style:{color:"#79B8FF"}},"false"),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#B392F0"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopData: "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            loopIndex: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            method: "),l("span",{style:{color:"#B392F0"}},"Method"),l("span",{style:{color:"#E1E4E8"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            clazz: "),l("span",{style:{color:"#B392F0"}},"Class"),l("span",{style:{color:"#E1E4E8"}},"<*>")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        ): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#79B8FF"}},"100"),l("span",{style:{color:"#E1E4E8"}},", params, loopData, loopIndex, method, clazz)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#B392F0"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>, loopData: "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<*>?, method: "),l("span",{style:{color:"#B392F0"}},"Method"),l("span",{style:{color:"#E1E4E8"}},", clazz: "),l("span",{style:{color:"#B392F0"}},"Class"),l("span",{style:{color:"#E1E4E8"}},"<*>): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(params, loopData, "),l("span",{style:{color:"#79B8FF"}},"0"),l("span",{style:{color:"#E1E4E8"}},", method, clazz)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 使用suspend标记，标记为挂起函数。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 应该使用阻塞代码块同步执行该函数，或者在另一个协程里进行调用。同时，主线程应该调用await阻塞")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 该方法允许Java方法通过kotlin发起对另一个方法的请求，并批量挂起用户协程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 协程相关文档请自行查询。本方法已经提供了重载调用方法，该方法已经自动阻塞执行了，所以，在没有提示修改和相关资料辅助的情况下请勿随意修改")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     *")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 关于协程调度器：")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Default：默认调度器，CPU密集型任务调度器，通常处理一些单纯的计算任务，或者执行时间较短任务。例如数据计算")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * IO：IO调度器，IO密集型任务调度器，适合执行IO相关操作。比如：网络请求，数据库操作，文件操作等")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Main：UI调度器，只有在UI编程平台上有意义，用于更新UI,例如Android中的主线程(请注意，在服务器程序中千万别选这项，不然会空指针异常)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Unconfined：非受限调度器，无所谓调度器，当前协程可以运行在任意线程上")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 请在适当位置选择变更协程调度器")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#B392F0"}},"@OptIn"),l("span",{style:{color:"#E1E4E8"}},"(DelicateCoroutinesApi::"),l("span",{style:{color:"#B392F0"}},"class"),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"suspend"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"invokeJavaMethodSuspend"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        maxCoroutineLimit: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        loopData: "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        loopIndex: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        method: "),l("span",{style:{color:"#B392F0"}},"Method"),l("span",{style:{color:"#E1E4E8"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        clazz: "),l("span",{style:{color:"#B392F0"}},"Class"),l("span",{style:{color:"#E1E4E8"}},"<*>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        isStatic: "),l("span",{style:{color:"#B392F0"}},"Boolean")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    ): "),l("span",{style:{color:"#B392F0"}},"List"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"withContext"),l("span",{style:{color:"#E1E4E8"}},"(Dispatchers.IO) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 限制用户挂起数量。如果没传就限制100个")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," coroutineLimit "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," maxCoroutineLimit ?: "),l("span",{style:{color:"#79B8FF"}},"100")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 确定循环参数在参数列表中的位置。如果没传默认在第一个位置")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," currLoopIndex "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," loopIndex ?: "),l("span",{style:{color:"#79B8FF"}},"0")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 创建一个协程池并限制协程数量")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," dispatcher "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"newFixedThreadPoolContext"),l("span",{style:{color:"#E1E4E8"}},"(coroutineLimit, "),l("span",{style:{color:"#9ECBFF"}},'"InvokeJavaMethodPool"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 启动协程并挂起")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," result "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"mutableListOf"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 创建任务列表等待挂起任务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," jobs "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"mutableListOf"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Deferred"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>>()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 按照指定字段挂起轮询。如果没有指定，就直接报错。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"if"),l("span",{style:{color:"#E1E4E8"}}," (loopData "),l("span",{style:{color:"#F97583"}},"=="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"null"),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#F97583"}},"throw"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"RuntimeException"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"空的迭代对象！请确认该对象有数据再进行调用！"'),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//    开始拼接参数列表，把要迭代的参数位置让出来，让参数依赖于这个数组进行迭代")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," paramsToInvoke "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"insertAndShift"),l("span",{style:{color:"#E1E4E8"}},"(params, currLoopIndex, "),l("span",{style:{color:"#79B8FF"}},"null"),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"for"),l("span",{style:{color:"#E1E4E8"}}," (param "),l("span",{style:{color:"#F97583"}},"in"),l("span",{style:{color:"#E1E4E8"}}," loopData) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            jobs."),l("span",{style:{color:"#B392F0"}},"add"),l("span",{style:{color:"#E1E4E8"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                "),l("span",{style:{color:"#6A737D"}},"// 在规定命名的协程池内，挂起协程。该协程池大小由coroutineLimit显式指定。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                "),l("span",{style:{color:"#B392F0"}},"async"),l("span",{style:{color:"#E1E4E8"}},"(dispatcher) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    paramsToInvoke[currLoopIndex] "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," param")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//                这里本来应该改用kotlin的reflect反射包里的clazz.kotlin.createInstance(),但是这样会导致数据丢更新，所以说目前还是换回了原来的方式。对于静态方法，不做反射实例化")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," obj "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"if"),l("span",{style:{color:"#E1E4E8"}}," (isStatic) "),l("span",{style:{color:"#79B8FF"}},"null"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"else"),l("span",{style:{color:"#E1E4E8"}}," clazz."),l("span",{style:{color:"#B392F0"}},"newInstance"),l("span",{style:{color:"#E1E4E8"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," res: "),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"? "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," method."),l("span",{style:{color:"#B392F0"}},"invoke"),l("span",{style:{color:"#E1E4E8"}},"(obj, "),l("span",{style:{color:"#F97583"}},"*"),l("span",{style:{color:"#E1E4E8"}},"paramsToInvoke)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                    res")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            )")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 汇总协程上下文数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        jobs."),l("span",{style:{color:"#B392F0"}},"joinAll"),l("span",{style:{color:"#E1E4E8"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 获取每个协程结果并添加到result列表中")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"for"),l("span",{style:{color:"#E1E4E8"}}," (job "),l("span",{style:{color:"#F97583"}},"in"),l("span",{style:{color:"#E1E4E8"}}," jobs) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            result."),l("span",{style:{color:"#B392F0"}},"add"),l("span",{style:{color:"#E1E4E8"}},"(job."),l("span",{style:{color:"#B392F0"}},"await"),l("span",{style:{color:"#E1E4E8"}},"())")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#6A737D"}},"// 关闭协程池")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        dispatcher."),l("span",{style:{color:"#B392F0"}},"close"),l("span",{style:{color:"#E1E4E8"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}},"@withContext result")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 形参列表移位。用于形参列表让出目的循环数据的位置")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"open"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"fun"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"insertAndShift"),l("span",{style:{color:"#E1E4E8"}},"(params: "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>, insertIndex: "),l("span",{style:{color:"#B392F0"}},"Int"),l("span",{style:{color:"#E1E4E8"}},", "),l("span",{style:{color:"#F97583"}},"value"),l("span",{style:{color:"#E1E4E8"}},": "),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?): "),l("span",{style:{color:"#B392F0"}},"Array"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//    创建一个比它大1的空数组，进行循环填充数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"val"),l("span",{style:{color:"#E1E4E8"}}," result "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"arrayOfNulls"),l("span",{style:{color:"#E1E4E8"}},"<"),l("span",{style:{color:"#B392F0"}},"Any"),l("span",{style:{color:"#E1E4E8"}},"?>(params.size "),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"1"),l("span",{style:{color:"#E1E4E8"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"for"),l("span",{style:{color:"#E1E4E8"}}," (i "),l("span",{style:{color:"#F97583"}},"in"),l("span",{style:{color:"#E1E4E8"}}," params.indices) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        比填充索引小，直接对应填入")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            "),l("span",{style:{color:"#F97583"}},"if"),l("span",{style:{color:"#E1E4E8"}}," (i "),l("span",{style:{color:"#F97583"}},"<"),l("span",{style:{color:"#E1E4E8"}}," insertIndex) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                result[i] "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            } "),l("span",{style:{color:"#F97583"}},"else"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"if"),l("span",{style:{color:"#E1E4E8"}}," (i "),l("span",{style:{color:"#F97583"}},"=="),l("span",{style:{color:"#E1E4E8"}}," insertIndex) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                result[i] "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"value")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                result[i "),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"1"),l("span",{style:{color:"#E1E4E8"}},"] "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            } "),l("span",{style:{color:"#F97583"}},"else"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"                result[i "),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"1"),l("span",{style:{color:"#E1E4E8"}},"] "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," result")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"kotlinx.coroutines."),l("span",{style:{color:"#005CC5"}},"*")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"java.lang.RuntimeException")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"java.lang.reflect.Method")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * "),l("span",{style:{color:"#D73A49"}},"@author"),l("span",{style:{color:"#6A737D"}}," He R'K")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * @date  2023/8/20 9:59")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * @version 1.0")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," * kotlin协程作用类。用于使用协程挂起业务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}}," */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"open"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"class"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"CoroutinesUtil"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 通过伴生对象来暴露外界可直接调用的接口")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 同时通过 @JvmStatic 实现一个类似static关键字的伴生对象扩展方法的静态标记")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 通过该注解的标记，让Java程序可以以调用静态方法的方式快速挂起协程，而省去创建对象的步骤")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"companion"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"object"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * 同步方法，阻塞主线程并执行该任务。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * 请注意，请勿在递归函数内随意调用，不然等待你的不一定是栈帧溢出，而可能先发生服务器卡顿甚至宕机。因为本方法将要调用异步代码块挂起数量庞大的协程。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"maxCoroutineLimit"),l("span",{style:{color:"#6A737D"}}," 最大协程数（默认100个）")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"params"),l("span",{style:{color:"#6A737D"}}," 需要被调用的方法的其他参数列表")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"loopIndex"),l("span",{style:{color:"#6A737D"}}," 被调用的迭代数据在目标方法的参数列表的位置。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"loopData"),l("span",{style:{color:"#6A737D"}}," 需要通过循环挂起协程的数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"method"),l("span",{style:{color:"#6A737D"}}," 被调用方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"clazz"),l("span",{style:{color:"#6A737D"}}," 被调用的对象字节码")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         * "),l("span",{style:{color:"#D73A49"}},"@param"),l("span",{style:{color:"#6A737D"}}," "),l("span",{style:{color:"#E36209"}},"isStatic"),l("span",{style:{color:"#6A737D"}}," 方法是否为静态方法。静态方法可以少一次newInstance的开销。为了防止报错，默认开启")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"         */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6F42C1"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            maxCoroutineLimit: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopData: "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopIndex: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            method: "),l("span",{style:{color:"#6F42C1"}},"Method"),l("span",{style:{color:"#24292E"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            clazz: "),l("span",{style:{color:"#6F42C1"}},"Class"),l("span",{style:{color:"#24292E"}},"<*>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            isStatic: "),l("span",{style:{color:"#6F42C1"}},"Boolean")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        ): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"runBlocking"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," instance "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"CoroutinesUtil"),l("span",{style:{color:"#24292E"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                instance."),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethodSuspend"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    maxCoroutineLimit,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    params,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    loopData,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    loopIndex,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    method,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    clazz,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    isStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                )")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6F42C1"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            maxCoroutineLimit: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopData: "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopIndex: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            method: "),l("span",{style:{color:"#6F42C1"}},"Method"),l("span",{style:{color:"#24292E"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            clazz: "),l("span",{style:{color:"#6F42C1"}},"Class"),l("span",{style:{color:"#24292E"}},"<*>")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        ): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(maxCoroutineLimit, params, loopData, loopIndex, method, clazz, "),l("span",{style:{color:"#005CC5"}},"false"),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6F42C1"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopData: "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            loopIndex: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            method: "),l("span",{style:{color:"#6F42C1"}},"Method"),l("span",{style:{color:"#24292E"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            clazz: "),l("span",{style:{color:"#6F42C1"}},"Class"),l("span",{style:{color:"#24292E"}},"<*>")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        ): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#005CC5"}},"100"),l("span",{style:{color:"#24292E"}},", params, loopData, loopIndex, method, clazz)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6F42C1"}},"@JvmStatic")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>, loopData: "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<*>?, method: "),l("span",{style:{color:"#6F42C1"}},"Method"),l("span",{style:{color:"#24292E"}},", clazz: "),l("span",{style:{color:"#6F42C1"}},"Class"),l("span",{style:{color:"#24292E"}},"<*>): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(params, loopData, "),l("span",{style:{color:"#005CC5"}},"0"),l("span",{style:{color:"#24292E"}},", method, clazz)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 使用suspend标记，标记为挂起函数。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 应该使用阻塞代码块同步执行该函数，或者在另一个协程里进行调用。同时，主线程应该调用await阻塞")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 该方法允许Java方法通过kotlin发起对另一个方法的请求，并批量挂起用户协程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 协程相关文档请自行查询。本方法已经提供了重载调用方法，该方法已经自动阻塞执行了，所以，在没有提示修改和相关资料辅助的情况下请勿随意修改")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     *")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 关于协程调度器：")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Default：默认调度器，CPU密集型任务调度器，通常处理一些单纯的计算任务，或者执行时间较短任务。例如数据计算")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * IO：IO调度器，IO密集型任务调度器，适合执行IO相关操作。比如：网络请求，数据库操作，文件操作等")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Main：UI调度器，只有在UI编程平台上有意义，用于更新UI,例如Android中的主线程(请注意，在服务器程序中千万别选这项，不然会空指针异常)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * Unconfined：非受限调度器，无所谓调度器，当前协程可以运行在任意线程上")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 请在适当位置选择变更协程调度器")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6F42C1"}},"@OptIn"),l("span",{style:{color:"#24292E"}},"(DelicateCoroutinesApi::"),l("span",{style:{color:"#6F42C1"}},"class"),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"suspend"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethodSuspend"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        maxCoroutineLimit: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        loopData: "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<*>?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        loopIndex: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},"?,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        method: "),l("span",{style:{color:"#6F42C1"}},"Method"),l("span",{style:{color:"#24292E"}},",")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        clazz: "),l("span",{style:{color:"#6F42C1"}},"Class"),l("span",{style:{color:"#24292E"}},"<*>,")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        isStatic: "),l("span",{style:{color:"#6F42C1"}},"Boolean")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    ): "),l("span",{style:{color:"#6F42C1"}},"List"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"withContext"),l("span",{style:{color:"#24292E"}},"(Dispatchers.IO) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 限制用户挂起数量。如果没传就限制100个")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," coroutineLimit "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," maxCoroutineLimit ?: "),l("span",{style:{color:"#005CC5"}},"100")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 确定循环参数在参数列表中的位置。如果没传默认在第一个位置")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," currLoopIndex "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," loopIndex ?: "),l("span",{style:{color:"#005CC5"}},"0")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 创建一个协程池并限制协程数量")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," dispatcher "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"newFixedThreadPoolContext"),l("span",{style:{color:"#24292E"}},"(coroutineLimit, "),l("span",{style:{color:"#032F62"}},'"InvokeJavaMethodPool"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 启动协程并挂起")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," result "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"mutableListOf"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 创建任务列表等待挂起任务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," jobs "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"mutableListOf"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Deferred"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>>()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 按照指定字段挂起轮询。如果没有指定，就直接报错。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"if"),l("span",{style:{color:"#24292E"}}," (loopData "),l("span",{style:{color:"#D73A49"}},"=="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"null"),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#D73A49"}},"throw"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"RuntimeException"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"空的迭代对象！请确认该对象有数据再进行调用！"'),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//    开始拼接参数列表，把要迭代的参数位置让出来，让参数依赖于这个数组进行迭代")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," paramsToInvoke "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"insertAndShift"),l("span",{style:{color:"#24292E"}},"(params, currLoopIndex, "),l("span",{style:{color:"#005CC5"}},"null"),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"for"),l("span",{style:{color:"#24292E"}}," (param "),l("span",{style:{color:"#D73A49"}},"in"),l("span",{style:{color:"#24292E"}}," loopData) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            jobs."),l("span",{style:{color:"#6F42C1"}},"add"),l("span",{style:{color:"#24292E"}},"(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                "),l("span",{style:{color:"#6A737D"}},"// 在规定命名的协程池内，挂起协程。该协程池大小由coroutineLimit显式指定。")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                "),l("span",{style:{color:"#6F42C1"}},"async"),l("span",{style:{color:"#24292E"}},"(dispatcher) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    paramsToInvoke[currLoopIndex] "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," param")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//                这里本来应该改用kotlin的reflect反射包里的clazz.kotlin.createInstance(),但是这样会导致数据丢更新，所以说目前还是换回了原来的方式。对于静态方法，不做反射实例化")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," obj "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"if"),l("span",{style:{color:"#24292E"}}," (isStatic) "),l("span",{style:{color:"#005CC5"}},"null"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"else"),l("span",{style:{color:"#24292E"}}," clazz."),l("span",{style:{color:"#6F42C1"}},"newInstance"),l("span",{style:{color:"#24292E"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," res: "),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"? "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," method."),l("span",{style:{color:"#6F42C1"}},"invoke"),l("span",{style:{color:"#24292E"}},"(obj, "),l("span",{style:{color:"#D73A49"}},"*"),l("span",{style:{color:"#24292E"}},"paramsToInvoke)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                    res")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            )")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 汇总协程上下文数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        jobs."),l("span",{style:{color:"#6F42C1"}},"joinAll"),l("span",{style:{color:"#24292E"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 获取每个协程结果并添加到result列表中")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"for"),l("span",{style:{color:"#24292E"}}," (job "),l("span",{style:{color:"#D73A49"}},"in"),l("span",{style:{color:"#24292E"}}," jobs) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            result."),l("span",{style:{color:"#6F42C1"}},"add"),l("span",{style:{color:"#24292E"}},"(job."),l("span",{style:{color:"#6F42C1"}},"await"),l("span",{style:{color:"#24292E"}},"())")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#6A737D"}},"// 关闭协程池")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        dispatcher."),l("span",{style:{color:"#6F42C1"}},"close"),l("span",{style:{color:"#24292E"}},"()")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}},"@withContext result")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#6A737D"}},"/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     * 形参列表移位。用于形参列表让出目的循环数据的位置")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"     */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"open"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"fun"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"insertAndShift"),l("span",{style:{color:"#24292E"}},"(params: "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>, insertIndex: "),l("span",{style:{color:"#6F42C1"}},"Int"),l("span",{style:{color:"#24292E"}},", "),l("span",{style:{color:"#D73A49"}},"value"),l("span",{style:{color:"#24292E"}},": "),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?): "),l("span",{style:{color:"#6F42C1"}},"Array"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?> {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//    创建一个比它大1的空数组，进行循环填充数据")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"val"),l("span",{style:{color:"#24292E"}}," result "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"arrayOfNulls"),l("span",{style:{color:"#24292E"}},"<"),l("span",{style:{color:"#6F42C1"}},"Any"),l("span",{style:{color:"#24292E"}},"?>(params.size "),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"1"),l("span",{style:{color:"#24292E"}},")")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"for"),l("span",{style:{color:"#24292E"}}," (i "),l("span",{style:{color:"#D73A49"}},"in"),l("span",{style:{color:"#24292E"}}," params.indices) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        比填充索引小，直接对应填入")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            "),l("span",{style:{color:"#D73A49"}},"if"),l("span",{style:{color:"#24292E"}}," (i "),l("span",{style:{color:"#D73A49"}},"<"),l("span",{style:{color:"#24292E"}}," insertIndex) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                result[i] "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            } "),l("span",{style:{color:"#D73A49"}},"else"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"if"),l("span",{style:{color:"#24292E"}}," (i "),l("span",{style:{color:"#D73A49"}},"=="),l("span",{style:{color:"#24292E"}}," insertIndex) {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                result[i] "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"value")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                result[i "),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"1"),l("span",{style:{color:"#24292E"}},"] "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            } "),l("span",{style:{color:"#D73A49"}},"else"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"                result[i "),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"1"),l("span",{style:{color:"#24292E"}},"] "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," params[i]")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," result")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),ks={id:"使用示例",tabindex:"-1"},Cs={id:"目标接受调用代码",tabindex:"-1"},_s=l("div",{style:{"max-height":"50px"},class:"language-java"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"java"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"class"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"InvokeTarget"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," String "),l("span",{style:{color:"#B392F0"}},"getApiData"),l("span",{style:{color:"#E1E4E8"}},"(Integer "),l("span",{style:{color:"#FFAB70"}},"sequenceId"),l("span",{style:{color:"#E1E4E8"}},",String "),l("span",{style:{color:"#FFAB70"}},"areaCode"),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#F97583"}},"throws"),l("span",{style:{color:"#E1E4E8"}}," InterruptedException {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        System.out."),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"(sequenceId"),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#9ECBFF"}},'" of index inherited method"'),l("span",{style:{color:"#E1E4E8"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        Thread."),l("span",{style:{color:"#B392F0"}},"sleep"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#79B8FF"}},"500"),l("span",{style:{color:"#E1E4E8"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"return"),l("span",{style:{color:"#E1E4E8"}}," sequenceId"),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#9ECBFF"}},'":"'),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#E1E4E8"}},"areaCode;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"class"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"InvokeTarget"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," String "),l("span",{style:{color:"#6F42C1"}},"getApiData"),l("span",{style:{color:"#24292E"}},"(Integer "),l("span",{style:{color:"#E36209"}},"sequenceId"),l("span",{style:{color:"#24292E"}},",String "),l("span",{style:{color:"#E36209"}},"areaCode"),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#D73A49"}},"throws"),l("span",{style:{color:"#24292E"}}," InterruptedException {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        System.out."),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"(sequenceId"),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#032F62"}},'" of index inherited method"'),l("span",{style:{color:"#24292E"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        Thread."),l("span",{style:{color:"#6F42C1"}},"sleep"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#005CC5"}},"500"),l("span",{style:{color:"#24292E"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"return"),l("span",{style:{color:"#24292E"}}," sequenceId"),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#032F62"}},'":"'),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#24292E"}},"areaCode;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1),fs={id:"发起调用代码",tabindex:"-1"},bs=l("div",{style:{"max-height":"50px"},class:"language-java"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"java"),l("pre",{class:"shiki github-dark vp-code-dark"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," java.lang.reflect.Method;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"import"),l("span",{style:{color:"#E1E4E8"}}," java.util."),l("span",{style:{color:"#79B8FF"}},"*"),l("span",{style:{color:"#E1E4E8"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"class"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"Main"),l("span",{style:{color:"#E1E4E8"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    "),l("span",{style:{color:"#F97583"}},"public"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"static"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"void"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#B392F0"}},"main"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#F97583"}},"String"),l("span",{style:{color:"#E1E4E8"}},"[] "),l("span",{style:{color:"#FFAB70"}},"args"),l("span",{style:{color:"#E1E4E8"}},") "),l("span",{style:{color:"#F97583"}},"throws"),l("span",{style:{color:"#E1E4E8"}}," NoSuchMethodException {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"long"),l("span",{style:{color:"#E1E4E8"}}," l "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," System."),l("span",{style:{color:"#B392F0"}},"currentTimeMillis"),l("span",{style:{color:"#E1E4E8"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        获取class对象")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        Class<"),l("span",{style:{color:"#F97583"}},"InvokeTarget"),l("span",{style:{color:"#E1E4E8"}},"> targetClass "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," InvokeTarget.class;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        获取到方法或被重载的方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        Method method "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," targetClass."),l("span",{style:{color:"#B392F0"}},"getMethod"),l("span",{style:{color:"#E1E4E8"}},"("),l("span",{style:{color:"#9ECBFF"}},'"getApiData"'),l("span",{style:{color:"#E1E4E8"}},", Integer.class, String.class);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        添加参数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"Object"),l("span",{style:{color:"#E1E4E8"}},"[] objects "),l("span",{style:{color:"#F97583"}},"=new"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"Object"),l("span",{style:{color:"#E1E4E8"}},"[]{"),l("span",{style:{color:"#9ECBFF"}},'"A0"'),l("span",{style:{color:"#E1E4E8"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        添加要被循环执行任务的列表")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        LinkedList<"),l("span",{style:{color:"#F97583"}},"Integer"),l("span",{style:{color:"#E1E4E8"}},"> linkedList "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#F97583"}},"new"),l("span",{style:{color:"#E1E4E8"}}," LinkedList<>(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//                Arrays.asList(1, 2, 3, 4, 5,6,7,8,9,10,null)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        );")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        "),l("span",{style:{color:"#F97583"}},"for"),l("span",{style:{color:"#E1E4E8"}}," ("),l("span",{style:{color:"#F97583"}},"int"),l("span",{style:{color:"#E1E4E8"}}," i "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"0"),l("span",{style:{color:"#E1E4E8"}},"; i "),l("span",{style:{color:"#F97583"}},"<"),l("span",{style:{color:"#E1E4E8"}}," "),l("span",{style:{color:"#79B8FF"}},"1500"),l("span",{style:{color:"#E1E4E8"}},"; i"),l("span",{style:{color:"#F97583"}},"++"),l("span",{style:{color:"#E1E4E8"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"            linkedList."),l("span",{style:{color:"#B392F0"}},"add"),l("span",{style:{color:"#E1E4E8"}},"(i);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        调用封装后的kotlin代码，传入循环列表、形参列表、方法体、class对象（实际上还要指定循环的数据所在参数列表的位置，默认为第一个）")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        List<"),l("span",{style:{color:"#F97583"}},"Object"),l("span",{style:{color:"#E1E4E8"}},"> list "),l("span",{style:{color:"#F97583"}},"="),l("span",{style:{color:"#E1E4E8"}}," CoroutinesUtil."),l("span",{style:{color:"#B392F0"}},"invokeJavaMethod"),l("span",{style:{color:"#E1E4E8"}},"(objects,linkedList,method,targetClass);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        查看调用结果")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        list.forEach(System.out::println);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"        System.out."),l("span",{style:{color:"#B392F0"}},"println"),l("span",{style:{color:"#E1E4E8"}},"(System."),l("span",{style:{color:"#B392F0"}},"currentTimeMillis"),l("span",{style:{color:"#E1E4E8"}},"()"),l("span",{style:{color:"#F97583"}},"-"),l("span",{style:{color:"#E1E4E8"}},"l"),l("span",{style:{color:"#F97583"}},"+"),l("span",{style:{color:"#9ECBFF"}},'"ms"'),l("span",{style:{color:"#E1E4E8"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#E1E4E8"}},"}")])])]),l("pre",{class:"shiki github-light vp-code-light"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," java.lang.reflect.Method;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"import"),l("span",{style:{color:"#24292E"}}," java.util."),l("span",{style:{color:"#005CC5"}},"*"),l("span",{style:{color:"#24292E"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"class"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"Main"),l("span",{style:{color:"#24292E"}}," {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    "),l("span",{style:{color:"#D73A49"}},"public"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"static"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"void"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#6F42C1"}},"main"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#D73A49"}},"String"),l("span",{style:{color:"#24292E"}},"[] "),l("span",{style:{color:"#E36209"}},"args"),l("span",{style:{color:"#24292E"}},") "),l("span",{style:{color:"#D73A49"}},"throws"),l("span",{style:{color:"#24292E"}}," NoSuchMethodException {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"long"),l("span",{style:{color:"#24292E"}}," l "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," System."),l("span",{style:{color:"#6F42C1"}},"currentTimeMillis"),l("span",{style:{color:"#24292E"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        获取class对象")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        Class<"),l("span",{style:{color:"#D73A49"}},"InvokeTarget"),l("span",{style:{color:"#24292E"}},"> targetClass "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," InvokeTarget.class;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        获取到方法或被重载的方法")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        Method method "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," targetClass."),l("span",{style:{color:"#6F42C1"}},"getMethod"),l("span",{style:{color:"#24292E"}},"("),l("span",{style:{color:"#032F62"}},'"getApiData"'),l("span",{style:{color:"#24292E"}},", Integer.class, String.class);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        添加参数")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"Object"),l("span",{style:{color:"#24292E"}},"[] objects "),l("span",{style:{color:"#D73A49"}},"=new"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"Object"),l("span",{style:{color:"#24292E"}},"[]{"),l("span",{style:{color:"#032F62"}},'"A0"'),l("span",{style:{color:"#24292E"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        添加要被循环执行任务的列表")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        LinkedList<"),l("span",{style:{color:"#D73A49"}},"Integer"),l("span",{style:{color:"#24292E"}},"> linkedList "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#D73A49"}},"new"),l("span",{style:{color:"#24292E"}}," LinkedList<>(")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//                Arrays.asList(1, 2, 3, 4, 5,6,7,8,9,10,null)")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        );")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        "),l("span",{style:{color:"#D73A49"}},"for"),l("span",{style:{color:"#24292E"}}," ("),l("span",{style:{color:"#D73A49"}},"int"),l("span",{style:{color:"#24292E"}}," i "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"0"),l("span",{style:{color:"#24292E"}},"; i "),l("span",{style:{color:"#D73A49"}},"<"),l("span",{style:{color:"#24292E"}}," "),l("span",{style:{color:"#005CC5"}},"1500"),l("span",{style:{color:"#24292E"}},"; i"),l("span",{style:{color:"#D73A49"}},"++"),l("span",{style:{color:"#24292E"}},") {")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"            linkedList."),l("span",{style:{color:"#6F42C1"}},"add"),l("span",{style:{color:"#24292E"}},"(i);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        调用封装后的kotlin代码，传入循环列表、形参列表、方法体、class对象（实际上还要指定循环的数据所在参数列表的位置，默认为第一个）")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        List<"),l("span",{style:{color:"#D73A49"}},"Object"),l("span",{style:{color:"#24292E"}},"> list "),l("span",{style:{color:"#D73A49"}},"="),l("span",{style:{color:"#24292E"}}," CoroutinesUtil."),l("span",{style:{color:"#6F42C1"}},"invokeJavaMethod"),l("span",{style:{color:"#24292E"}},"(objects,linkedList,method,targetClass);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        查看调用结果")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#6A737D"}},"//        list.forEach(System.out::println);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"        System.out."),l("span",{style:{color:"#6F42C1"}},"println"),l("span",{style:{color:"#24292E"}},"(System."),l("span",{style:{color:"#6F42C1"}},"currentTimeMillis"),l("span",{style:{color:"#24292E"}},"()"),l("span",{style:{color:"#D73A49"}},"-"),l("span",{style:{color:"#24292E"}},"l"),l("span",{style:{color:"#D73A49"}},"+"),l("span",{style:{color:"#032F62"}},'"ms"'),l("span",{style:{color:"#24292E"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"    }")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#24292E"}},"}")])])]),l("button",{class:"collapse"})],-1);function Bs(e,Is,xs,Js,p,js){const n=h,r=E;return u(),F(r,{frontmatter:p.frontmatter,data:p.data},{"main-content-md":o(()=>[l("h1",D,[s("Java&Kotlin混编与API迁移规范文档 "),a(n,{class:"header-anchor",href:"#java-kotlin混编与api迁移规范文档","aria-label":'Permalink to "Java&Kotlin混编与API迁移规范文档"'},{default:o(()=>[s("​")]),_:1})]),l("nav",v,[l("ul",null,[l("li",null,[a(n,{href:"#迁移规范"},{default:o(()=>[s("迁移规范")]),_:1}),l("ul",null,[l("li",null,[a(n,{href:"#通俗约定"},{default:o(()=>[s("通俗约定")]),_:1})]),l("li",null,[a(n,{href:"#maven编译模式"},{default:o(()=>[s("Maven编译模式")]),_:1})]),l("li",null,[a(n,{href:"#maven坐标与混合编译支持"},{default:o(()=>[s("Maven坐标与混合编译支持")]),_:1})]),l("li",null,[a(n,{href:"#maven插件与spring支持"},{default:o(()=>[s("Maven插件与spring支持")]),_:1})]),l("li",null,[a(n,{href:"#依赖版本"},{default:o(()=>[s("依赖版本")]),_:1})])])]),l("li",null,[a(n,{href:"#开发规范qa合集-持续完善"},{default:o(()=>[s("开发规范QA合集（持续完善）")]),_:1}),l("ul",null,[l("li",null,[a(n,{href:"#java快速上手kotlin"},{default:o(()=>[s("Java快速上手kotlin")]),_:1})]),l("li",null,[a(n,{href:"#类-方法规范"},{default:o(()=>[s("类/方法规范")]),_:1})]),l("li",null,[a(n,{href:"#协程使用规范"},{default:o(()=>[s("协程使用规范")]),_:1})])])]),l("li",null,[a(n,{href:"#目前已有的迁移封装"},{default:o(()=>[s("目前已有的迁移封装")]),_:1}),l("ul",null,[l("li",null,[a(n,{href:"#多协程执行io-网络服务请求-任务"},{default:o(()=>[s("多协程执行IO（网络服务请求）任务")]),_:1})])])])])]),l("h2",m,[s("迁移规范 "),a(n,{class:"header-anchor",href:"#迁移规范","aria-label":'Permalink to "迁移规范"'},{default:o(()=>[s("​")]),_:1})]),l("h3",g,[s("通俗约定 "),a(n,{class:"header-anchor",href:"#通俗约定","aria-label":'Permalink to "通俗约定"'},{default:o(()=>[s("​")]),_:1})]),k,C,l("h3",_,[s("Maven编译模式 "),a(n,{class:"header-anchor",href:"#maven编译模式","aria-label":'Permalink to "Maven编译模式"'},{default:o(()=>[s("​")]),_:1})]),f,l("h3",b,[s("Maven坐标与混合编译支持 "),a(n,{class:"header-anchor",href:"#maven坐标与混合编译支持","aria-label":'Permalink to "Maven坐标与混合编译支持"'},{default:o(()=>[s("​")]),_:1})]),B,l("h3",I,[s("Maven插件与spring支持 "),a(n,{class:"header-anchor",href:"#maven插件与spring支持","aria-label":'Permalink to "Maven插件与spring支持"'},{default:o(()=>[s("​")]),_:1})]),x,l("h3",J,[s("依赖版本 "),a(n,{class:"header-anchor",href:"#依赖版本","aria-label":'Permalink to "依赖版本"'},{default:o(()=>[s("​")]),_:1})]),j,M,l("h2",S,[s("开发规范QA合集（持续完善） "),a(n,{class:"header-anchor",href:"#开发规范qa合集-持续完善","aria-label":'Permalink to "开发规范QA合集（持续完善）"'},{default:o(()=>[s("​")]),_:1})]),l("h3",L,[s("Java快速上手kotlin "),a(n,{class:"header-anchor",href:"#java快速上手kotlin","aria-label":'Permalink to "Java快速上手kotlin"'},{default:o(()=>[s("​")]),_:1})]),l("p",null,[a(n,{href:"https://kotlinlang.org/docs/home.html",target:"_blank",rel:"noreferrer"},{default:o(()=>[s("kotlin官方文档链接")]),_:1})]),l("h4",K,[s("基础变量对照 "),a(n,{class:"header-anchor",href:"#基础变量对照","aria-label":'Permalink to "基础变量对照"'},{default:o(()=>[s("​")]),_:1})]),P,z,O,w,$,T,U,l("h4",H,[s("变量声明 "),a(n,{class:"header-anchor",href:"#变量声明","aria-label":'Permalink to "变量声明"'},{default:o(()=>[s("​")]),_:1})]),q,N,R,V,l("h4",W,[s("遍历方法 "),a(n,{class:"header-anchor",href:"#遍历方法","aria-label":'Permalink to "遍历方法"'},{default:o(()=>[s("​")]),_:1})]),Q,l("h4",X,[s("方法声明 "),a(n,{class:"header-anchor",href:"#方法声明","aria-label":'Permalink to "方法声明"'},{default:o(()=>[s("​")]),_:1})]),Z,G,Y,ll,sl,l("h4",ol,[s("函数式API "),a(n,{class:"header-anchor",href:"#函数式api","aria-label":'Permalink to "函数式API"'},{default:o(()=>[s("​")]),_:1})]),nl,al,l("h4",el,[s("class类声明 "),a(n,{class:"header-anchor",href:"#class类声明","aria-label":'Permalink to "class类声明"'},{default:o(()=>[s("​")]),_:1})]),tl,cl,pl,rl,El,yl,il,dl,ul,l("h4",Fl,[s("open class与class "),a(n,{class:"header-anchor",href:"#open-class与class","aria-label":'Permalink to "open class与class"'},{default:o(()=>[s("​")]),_:1})]),hl,Al,Dl,vl,ml,gl,kl,Cl,_l,fl,bl,Bl,Il,xl,Jl,jl,Ml,Sl,Ll,l("h3",Kl,[s("类/方法规范 "),a(n,{class:"header-anchor",href:"#类-方法规范","aria-label":'Permalink to "类/方法规范"'},{default:o(()=>[s("​")]),_:1})]),l("h4",Pl,[s("Java友好的静态方法 "),a(n,{class:"header-anchor",href:"#java友好的静态方法","aria-label":'Permalink to "Java友好的静态方法"'},{default:o(()=>[s("​")]),_:1})]),zl,Ol,wl,$l,Tl,Ul,Hl,l("h4",ql,[s("挂起函数与标记挂起 "),a(n,{class:"header-anchor",href:"#挂起函数与标记挂起","aria-label":'Permalink to "挂起函数与标记挂起"'},{default:o(()=>[s("​")]),_:1})]),Nl,Rl,Vl,Wl,Ql,Xl,Zl,Gl,Yl,ls,l("h3",ss,[s("协程使用规范 "),a(n,{class:"header-anchor",href:"#协程使用规范","aria-label":'Permalink to "协程使用规范"'},{default:o(()=>[s("​")]),_:1})]),l("h4",os,[s("协程调度器定义与分类 "),a(n,{class:"header-anchor",href:"#协程调度器定义与分类","aria-label":'Permalink to "协程调度器定义与分类"'},{default:o(()=>[s("​")]),_:1})]),ns,as,es,ts,l("h4",cs,[s("异步构建 "),a(n,{class:"header-anchor",href:"#异步构建","aria-label":'Permalink to "异步构建"'},{default:o(()=>[s("​")]),_:1})]),ps,l("h4",rs,[s("协程作用域 "),a(n,{class:"header-anchor",href:"#协程作用域","aria-label":'Permalink to "协程作用域"'},{default:o(()=>[s("​")]),_:1})]),Es,l("h4",ys,[s("调度器 "),a(n,{class:"header-anchor",href:"#调度器","aria-label":'Permalink to "调度器"'},{default:o(()=>[s("​")]),_:1})]),is,l("h4",ds,[s("异常处理 "),a(n,{class:"header-anchor",href:"#异常处理","aria-label":'Permalink to "异常处理"'},{default:o(()=>[s("​")]),_:1})]),us,l("h4",Fs,[s("协程的取消和内存泄漏问题的规避 "),a(n,{class:"header-anchor",href:"#协程的取消和内存泄漏问题的规避","aria-label":'Permalink to "协程的取消和内存泄漏问题的规避"'},{default:o(()=>[s("​")]),_:1})]),hs,l("h2",As,[s("目前已有的迁移封装 "),a(n,{class:"header-anchor",href:"#目前已有的迁移封装","aria-label":'Permalink to "目前已有的迁移封装"'},{default:o(()=>[s("​")]),_:1})]),l("h3",Ds,[s("多协程执行IO（网络服务请求）任务 "),a(n,{class:"header-anchor",href:"#多协程执行io-网络服务请求-任务","aria-label":'Permalink to "多协程执行IO（网络服务请求）任务"'},{default:o(()=>[s("​")]),_:1})]),vs,l("h4",ms,[s("kotlin核心封装代码 "),a(n,{class:"header-anchor",href:"#kotlin核心封装代码","aria-label":'Permalink to "kotlin核心封装代码"'},{default:o(()=>[s("​")]),_:1})]),gs,l("h4",ks,[s("使用示例 "),a(n,{class:"header-anchor",href:"#使用示例","aria-label":'Permalink to "使用示例"'},{default:o(()=>[s("​")]),_:1})]),l("h5",Cs,[s("目标接受调用代码 "),a(n,{class:"header-anchor",href:"#目标接受调用代码","aria-label":'Permalink to "目标接受调用代码"'},{default:o(()=>[s("​")]),_:1})]),_s,l("h5",fs,[s("发起调用代码 "),a(n,{class:"header-anchor",href:"#发起调用代码","aria-label":'Permalink to "发起调用代码"'},{default:o(()=>[s("​")]),_:1})]),bs]),"main-header":o(()=>[t(e.$slots,"main-header")]),"main-header-after":o(()=>[t(e.$slots,"main-header-after")]),"main-nav":o(()=>[t(e.$slots,"main-nav")]),"main-content":o(()=>[t(e.$slots,"main-content")]),"main-content-after":o(()=>[t(e.$slots,"main-content-after")]),"main-nav-before":o(()=>[t(e.$slots,"main-nav-before")]),"main-nav-after":o(()=>[t(e.$slots,"main-nav-after")]),comment:o(()=>[t(e.$slots,"comment")]),footer:o(()=>[t(e.$slots,"footer")]),aside:o(()=>[t(e.$slots,"aside")]),"aside-custom":o(()=>[t(e.$slots,"aside-custom")]),default:o(()=>[t(e.$slots,"default")]),_:3},8,["frontmatter","data"])}const Os=y(A,[["render",Bs]]);export{c as data,Os as default};
